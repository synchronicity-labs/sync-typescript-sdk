/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Batch } from "./api/resources/batch/client/Client";
import { Generations } from "./api/resources/generations/client/Client";

export declare namespace SyncClient {
    export interface Options {
        environment?: core.Supplier<environments.SyncEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey?: core.Supplier<string>;
        fetcher?: core.FetchFunction;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class SyncClient {
    protected _batch: Batch | undefined;
    protected _generations: Generations | undefined;

    constructor(protected readonly _options: SyncClient.Options = {}) {}

    public get batch(): Batch {
        return (this._batch ??= new Batch(this._options));
    }

    public get generations(): Generations {
        return (this._generations ??= new Generations(this._options));
    }
}
